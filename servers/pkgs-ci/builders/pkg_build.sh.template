#!/bin/bash

set -o errexit
set -o pipefail
set -o xtrace

############################
# Guess mirror host
############################

test -f mirror.setenvfile && source mirror.setenvfile
export REMOTE_REPO_HOST=${{MIRROR_HOST:-mirror.fuel-infra.org}}
export REMOTE_REQUEST_REPO_HOST={repo-host}

############################
# Project parameters
############################

PROJECT_NAME={project-name}
PROJECT_VERSION={mos_version}

# Set default version for master branch
test "${{PROJECT_VERSION}}" = "master" && PROJECT_VERSION="{master-mos-version}" || :

# Project info
export PROJECT_NAME PROJECT_VERSION

############################
# Global parameters
############################

export DIST="${{DIST:-{distro}}}"
export SPEC_PREFIX_PATH="{spec_path_prefix}"
export REPO_REQUEST_PATH_PREFIX="{cr-path-prefix}"

# Gerrit parameters
export GERRIT_HOST=${{GERRIT_HOST:-{gerrit-host}}}
export GERRIT_PORT=${{GERRIT_PORT:-{gerrit-port}}}
export GERRIT_USER=${{GERRIT_USER:-{gerrit-user}}}

SRC_PROJECT_PATH="${{GERRIT_PROJECT%/*}}"
SRC_PROJECT_PATH="${{SRC_PROJECT_PATH%-build}}"
SPEC_PROJECT_PATH=openstack-build
export SRC_PROJECT_PATH SPEC_PROJECT_PATH

# Parameters for package specs
export SPEC_PROJECT_SUFFIX=-build

# Set parameters specific to project(s)
case ${{ZUUL_PROJECT}} in
    openstack/fuel-*|openstack/network-checker|openstack/python-fuelclient|openstack/solar|openstack/shotgun|openstack/timmy|openstack/tuning-box )
        IS_FUEL=true
        IS_OPENSTACK=false
        unset SPEC_PROJECT
        ;;
esac

# OS-specific parameters by package type
case "{pkg_type}" in
    rpm )
        UPDATE_MASTER=true
        ;;
esac

# FIXME(aevseev) Force master node update for 9.0 -> 9.x
if [ "${{MOS_VERSION}}" = '9.0' ]; then
    UPDATE_MASTER=true
fi

# New scheme
DEB_DIST_NAME={deb-dist-name}
RPM_DIST_NAME={rpm-dist-name}

BASE_DEB_REPO_PATH={mos-deb-repo-path}
BASE_RPM_REPO_PATH={mos-rpm-repo-path}

# Per-CR repository pathes
export DEB_REQUEST_REPO_PATH={mos-deb-repo-path}/{mos_version}
export RPM_REQUEST_OS_REPO_PATH={mos-rpm-repo-path}/os
export RPM_REQUEST_HOTFIX_REPO_PATH={mos-rpm-repo-path}/hotfix
export RPM_REQUEST_SECURITY_REPO_PATH={mos-rpm-repo-path}/security
export RPM_REQUEST_PROPOSED_REPO_PATH={mos-rpm-repo-path}/proposed

# Repository pathes for publisher
PUBLISH_DEB_REPO_PATH=${{BASE_DEB_REPO_PATH}}/{mos_version}
PUBLISH_RPM_OS_REPO_PATH=${{BASE_RPM_REPO_PATH}}/os
PUBLISH_RPM_HOTFIX_REPO_PATH=${{BASE_RPM_REPO_PATH}}/hotfix
PUBLISH_RPM_UPDATES_REPO_PATH=${{BASE_RPM_REPO_PATH}}/updates
PUBLISH_RPM_PROPOSED_REPO_PATH=${{BASE_RPM_REPO_PATH}}/proposed
PUBLISH_RPM_SECURITY_REPO_PATH=${{BASE_RPM_REPO_PATH}}/security
PUBLISH_RPM_HOLDBACK_REPO_PATH=${{BASE_RPM_REPO_PATH}}/holdback

# Get latest snapshots
SNAPSHOT_DEB=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_DEB_REPO_PATH}}/snapshots/{mos_version}-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_OS=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/os-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_HOTFIX=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/hotfix-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_UPDATES=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/updates-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_PROPOSED=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/proposed-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_SECURITY=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/security-latest.target.txt" | sed '1p; d')
SNAPSHOT_RPM_HOLDBACK=$(curl -fLsS "http://${{REMOTE_REPO_HOST}}/${{BASE_RPM_REPO_PATH}}/snapshots/holdback-latest.target.txt" | sed '1p; d')

# Repository pathes for builder (for build dependencies)
DEB_REPO_PATH=${{BASE_DEB_REPO_PATH}}/snapshots/${{SNAPSHOT_DEB}}
RPM_OS_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_OS}}
RPM_HOTFIX_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_HOTFIX}}
RPM_UPDATES_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_UPDATES}}
RPM_PROPOSED_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_PROPOSED}}
RPM_SECURITY_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_SECURITY}}
RPM_HOLDBACK_REPO_PATH=${{BASE_RPM_REPO_PATH}}/snapshots/${{SNAPSHOT_RPM_HOLDBACK}}

# DEB-specific parameters
export DEB_DIST_NAME DEB_REPO_PATH
export DEB_HOTFIX_DIST_NAME=${{DEB_DIST_NAME}}-hotfix
export DEB_PROPOSED_DIST_NAME=${{DEB_DIST_NAME}}-proposed
export DEB_UPDATES_DIST_NAME=${{DEB_DIST_NAME}}-updates
export DEB_SECURITY_DIST_NAME=${{DEB_DIST_NAME}}-security
export DEB_HOLDBACK_DIST_NAME=${{DEB_DIST_NAME}}-holdback

if [ "${{GERRIT_CHANGE_STATUS}}" = "MERGED" ]; then
    export ORIGIN=Mirantis
else
    export ORIGIN=testing
fi

# RPM-specific parameters
export RPM_OS_REPO_PATH RPM_HOTFIX_REPO_PATH RPM_UPDATES_REPO_PATH RPM_PROPOSED_REPO_PATH RPM_SECURITY_REPO_PATH RPM_HOLDBACK_REPO_PATH

# Updates?
export IS_UPDATES={is_updates}

############################
# Build package
############################

# Save time of build start
BUILD_START_AT=$(date -u +%s)

# ... and build a package
bash -x build-${{IS_FUEL:+fuel-}}{pkg_type}.sh

# Print build job duration
BUILD_FINISH_AT=$(date -u +%s)
BUILD_DURATION=$(( ${{BUILD_FINISH_AT}} - ${{BUILD_START_AT}} ))
H=$(( ${{BUILD_DURATION}}/3600 ))    # Hours
M=$(( ${{BUILD_DURATION}}%3600/60 )) # Minutes
S=$(( ${{BUILD_DURATION}}%60 ))      # Seconds

echo ##############################
printf "Package building took %02d:%02d:%02d\n" ${{H}} ${{M}} ${{S}}
echo ##############################

rm -rf {repo-base-path}/${{REQUEST_NUM:-CR-${{GERRIT_CHANGE_NUMBER}}}}

# Extra parameters for publisher
cat >> buildresult.params <<EOF

# Added for publisher
ORIGIN=${{ORIGIN}}
IS_UPDATES=${{IS_UPDATES}}
REPO_REQUEST_PATH_PREFIX=${{REPO_REQUEST_PATH_PREFIX}}
REPO_BASE_PATH={repo-base-path}
DEB_DIST_NAME=${{DEB_DIST_NAME}}
DEB_REPO_PATH=${{PUBLISH_DEB_REPO_PATH}}
DEB_HOTFIX_DIST_NAME=${{DEB_HOTFIX_DIST_NAME}}
DEB_PROPOSED_DIST_NAME=${{DEB_PROPOSED_DIST_NAME}}
DEB_UPDATES_DIST_NAME=${{DEB_UPDATES_DIST_NAME}}
DEB_SECURITY_DIST_NAME=${{DEB_SECURITY_DIST_NAME}}
DEB_HOLDBACK_DIST_NAME=${{DEB_HOLDBACK_DIST_NAME}}
RPM_OS_REPO_PATH=${{PUBLISH_RPM_OS_REPO_PATH}}
RPM_HOTFIX_REPO_PATH=${{PUBLISH_RPM_HOTFIX_REPO_PATH}}
RPM_PROPOSED_REPO_PATH=${{PUBLISH_RPM_PROPOSED_REPO_PATH}}
RPM_UPDATES_REPO_PATH=${{PUBLISH_RPM_UPDATES_REPO_PATH}}
RPM_SECURITY_REPO_PATH=${{PUBLISH_RPM_SECURITY_REPO_PATH}}
RPM_HOLDBACK_REPO_PATH=${{PUBLISH_RPM_HOLDBACK_REPO_PATH}}
REMOTE_REPO_HOST={repo-host}
EOF

# Package may not have custom tests. This will create empty file but will not
# affect test parameters if any
touch tests.envfile

test "${{UNSET_LP_BUG:-false}}" == "true" && sed -ri '/^LP_BUG=/ d' buildresult.params || :

cat >> systest.params <<EOF
IS_FUEL=${{IS_FUEL:-false}}
UPDATE_MASTER=${{UPDATE_MASTER:-false}}
REBUILD_ISO=${{REBUILD_ISO:-false}}
EOF
