- project:

    name: 'trunk'

    project-name: 'trunk'
    project-version: 'master'

    deb-origin-release: 'Mirantis'
    deb-origin-test: 'testing'

    publish-repo-host: 'perestroika-repo-tst.infra.mirantis.net'
    repo-base-path: '/home/jenkins/pubrepos'
    repo-host: 'perestroika-repo-tst.infra.mirantis.net'

    # Configure flows
    is-downgrade: 'true'
    is-updates: 'false'

    # Gerrit parameters
    gerrit-host: 'review.fuel-infra.org'
    gerrit-port: '29418'
    gerrit-user: 'openstack-ci-jenkins'

    # Install test repository
    install-scm-repo: 'infra/ci-test-request'
    install-scm-branch: 'master'
    perestroika-branch: 'master'

    # Job slave nodes
    build-node: 'new-builder'
    publish-node: 'new-publisher'
    install-node: 'install-node'
    systest-node: 'systest'

    # Repository parameters for project
    deb-dist-name: 'mos-master'
    deb-repo-path: '/trunk/mos-repos/ubuntu'
    rpm-repo-path: '/trunk/mos-repos/centos/mos-master-centos7'

    # MOS repositories (build/test dependencies)
    mos-deb-repo-path: '/mos-repos/ubuntu'
    mos-rpm-repo-path: '/mos-repos/centos/mos-master-centos7'

    # Specific config
    custom-repo-id-prefix: tmp-master-builds

    distro:
    - centos7:
        os: 'centos'
        pkg_type: 'rpm'
        spec_prefix_path: '/{distro}'
    - trusty:
        os: 'ubuntu'
        pkg_type: 'deb'
        spec_prefix_path: '/{distro}'

    # FIXME: refactor
    # added for systest:
    mos_version: 'master'
    main_ubuntu_release: 'xenial'
    openstack_release: 'ubuntu'
    rpm-dist-name: 'mos-master-centos7'
    fuel-main-branch: 'master'
    fuel-qa-branch: 'master'
    fuel-namespace: 'openstack'
    repo-host: 'perestroika-repo-tst.infra.mirantis.net'

    jobs:
    - '{project-version}-pkg-{project-name}-scenario-{os}-{distro}'
    - '{project-version}-pkg-{project-name}-build-{os}-{distro}'
    - '{project-version}-pkg-{project-name}-publish-{os}-{distro}'
    - '{project-version}-pkg-{project-name}-install-{os}-{distro}'
    # - '{project-version}-pkg-{project-name}-repotest-{os}-{distro}'
    - '{project-version}-pkg-{project-name}-systest-{os}-{distro}'


- job-template:
    # todo: gather artifacts
    name: '{project-version}-pkg-{project-name}-scenario-{os}-{distro}'
    description: |
      This job is scenario for building project from merged branch

    project-type: multijob
    concurrent: true

    parameters:
      - string:
          name: GERRIT_PROJECT
          description: "Name of project to build"

    wrappers:
      - timeout:
          fail: true
          timeout: 210
      - timestamps
      - ansicolor

    properties:
      - inject:
          properties-content: |
            CUSTOM_REPO_ID_PREFIX={custom-repo-id-prefix}

    builders:

    # STEP I:
    #   just build package(s) and get information where to find results
    # -------------------------------------

    # here we create CUSTOM_REPO_ID and remember it
    # each project from gerrit will have own repo
    # and it's possible to add some customization to group related projects together:
    # just trigger build with CUSTOM_REPO_ID as parameter
    - shell: |
        #!/usr/bin/env python
        import os

        GERRIT_PROJECT = os.environ.get('GERRIT_PROJECT')
        CUSTOM_REPO_ID_PREFIX = os.environ.get('CUSTOM_REPO_ID_PREFIX')

        with open('tmp.envinject', 'w') as f:
            project_name = GERRIT_PROJECT.split('/', 1)[1]
            prj_group_ns = project_name.replace('/', '-')

            CUSTOM_REPO_ID_PREFIX = os.environ.get('CUSTOM_REPO_ID_PREFIX')
            f.write('CUSTOM_REPO_ID={{0}}/{{1}}'.format(CUSTOM_REPO_ID_PREFIX, prj_group_ns))
    - inject-properties-file:
        properties-file: 'tmp.envinject'

    - inject:
        # We do not have valid request for next steps, but we must mimic changeet,
        # because everything is related to it. So, for getting unique parameter
        # for querying artifacts we add some vars:
        #   - GERRIT_CHANGE_NUMBER=$BUILD_ID
        #   - GERRIT_PATCHSET_NUMBER=1
        properties-content: |
          GERRIT_CHANGE_NUMBER=$BUILD_ID
          GERRIT_PATCHSET_NUMBER=1

    - inject:
        # Before starting tests we want to publish package into temp repo, but it's already merged,
        # so traditional w/f in perestroika can't do anything with it.
        # We will trick perestroika - change destination repo for these particular steps to
        # some kind of temp repo and add real destination repos as extras
        # We want to avoid copypasting and make everything simple and verbose, so inject
        # req. variables:
        properties-content: |
          _REPO_PATH_FOR_USTABLE_DEB=/$CUSTOM_REPO_ID/mos-repos/ubuntu
          _REPO_PATH_FOR_USTABLE_RPM=/$CUSTOM_REPO_ID/mos-repos/centos/mos-master-centos7
          _REPO_FOR_USTABLE_DEB=http://{publish-repo-host}/$CUSTOM_REPO_ID/mos-repos/ubuntu {deb-dist-name} main restricted
          _REPO_FOR_USTABLE_RPM=testing,http://{publish-repo-host}/$CUSTOM_REPO_ID/mos-repos/centos/mos-master-centos7/os
          _ORIGINAL_DESTINATION_REPO_DEB=http://{publish-repo-host}/{deb-repo-path}/{project-version} {deb-dist-name} main restricted
          _ORIGINAL_DESTINATION_REPO_RPM=deps,http://{publish-repo-host}/{rpm-repo-path}/os/x86_64
          _MASTER_REPO_FOR_DEP_DEB=http://{publish-repo-host}/{mos-deb-repo-path}/{project-version} {deb-dist-name} main restricted
          _MASTER_REPO_FOR_DEP_RPM=deps,http://{publish-repo-host}/{mos-rpm-repo-path}/os/x86_64

    - multijob:
        name: 'Build'
        condition: SUCCESSFUL
        projects:
          - name: '{project-version}-pkg-{project-name}-build-{os}-{distro}'
            # Tricks used:
            #   We do not plan to publish trunk to mirrors, so there will be no possibility to find
            #   any repo on standart mirror so we'll replace it w/ publish-repo-host
            #     - MIRROR_HOST={publish-repo-host}
            #   We change destination repo to temp repo
            #     - BASE_DEB_REPO_PATH=$_REPO_PATH_FOR_USTABLE_DEB
            #     - BASE_RPM_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM
            #   .. and add real destination and master as extras:
            #     - ADDITIONAL_EXTRAREPO_DEB=$_ORIGINAL_DESTINATION_REPO_DEB|$_MASTER_REPO_FOR_DEP_DEB
            #     - ADDITIONAL_EXTRAREPO_RPM=$_ORIGINAL_DESTINATION_REPO_RPM|$_MASTER_REPO_FOR_DEP_RPM
            #   .. and change ORIGIN to testing origin which change pkg priority
            predefined-parameters: |
              GERRIT_HOST={gerrit-host}
              GERRIT_PORT={gerrit-port}
              GERRIT_USER={gerrit-user}
              GERRIT_PROJECT=$GERRIT_PROJECT
              GERRIT_CHANGE_STATUS=REF_UPDATED
              GERRIT_REFNAME={project-version}
              GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
              GERRIT_PATCHSET_NUMBER=$GERRIT_PATCHSET_NUMBER
              SOURCE_BRANCH={project-version}
              ZUUL_COMMIT=$BUILD_TAG
              ZUUL_UUID=$BUILD_TAG
              MIRROR_HOST={publish-repo-host}
              BASE_DEB_REPO_PATH=$_REPO_PATH_FOR_USTABLE_DEB
              BASE_RPM_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM
              RPM_OS_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM/os
              ADDITIONAL_EXTRAREPO_DEB=$_ORIGINAL_DESTINATION_REPO_DEB|$_MASTER_REPO_FOR_DEP_DEB
              ADDITIONAL_EXTRAREPO_RPM=$_ORIGINAL_DESTINATION_REPO_RPM|$_MASTER_REPO_FOR_DEP_RPM
              ORIGIN={deb-origin-test}

    - inject-from-job(same-change):
        job-name: '{project-version}-pkg-{project-name}-build-{os}-{distro}'
        artifact-name: 'buildresult.params'
    - rename:
        src: 'buildresult.params'
        dst: 'buildresult-tmp.params'
        allow-empty: true

    - inject-from-job(same-change):
        job-name: '{project-version}-pkg-{project-name}-build-{os}-{distro}'
        artifact-name: 'buildresult.params'
    - rename:
        src: 'tests.envfile'
        dst: 'tests-tmp.envfile'
        allow-empty: true

    # STEP II:
    #   publish package(s) into temp. repository
    # -------------------------------------

    - multijob:
        name: 'Publish temp'
        condition: SUCCESSFUL
        projects:
        # todo: not sure which parameters are really need here
        - name: '{project-version}-pkg-{project-name}-publish-{os}-{distro}'
          predefined-parameters: |
            GERRIT_HOST={gerrit-host}
            GERRIT_PORT={gerrit-port}
            GERRIT_USER={gerrit-user}
            GERRIT_PROJECT=$GERRIT_PROJECT
            GERRIT_CHANGE_STATUS=REF_UPDATED
            GERRIT_REFNAME={project-version}
            GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
            GERRIT_PATCHSET_NUMBER=$GERRIT_PATCHSET_NUMBER
            SOURCE_BRANCH={project-version}
            ZUUL_COMMIT=$BUILD_TAG
            ZUUL_UUID=$BUILD_TAG
            MIRROR_HOST={publish-repo-host}
            BASE_DEB_REPO_PATH=$_REPO_PATH_FOR_USTABLE_DEB
            BASE_RPM_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM
            DEB_REPO_PATH=$_REPO_PATH_FOR_USTABLE_DEB
            RPM_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM
            RPM_OS_REPO_PATH=$_REPO_PATH_FOR_USTABLE_RPM/os
            ADDITIONAL_EXTRAREPO_DEB=$_ORIGINAL_DESTINATION_REPO_DEB|$_MASTER_REPO_FOR_DEP_DEB
            ADDITIONAL_EXTRAREPO_RPM=$_ORIGINAL_DESTINATION_REPO_RPM|$_MASTER_REPO_FOR_DEP_RPM

    - inject-from-job(same-change):
        job-name: '{project-version}-pkg-{project-name}-publish-{os}-{distro}'
        artifact-name: '{pkg_type}.publish.setenvfile'
    - rename:
        src: '{pkg_type}.publish.setenvfile'
        dst: '{pkg_type}.publish-tmp.setenvfile'
        allow-empty: true

    # todo: pkg-versions.html ?

    # STEP III:
    #   test package(s) vs master repository
    # -------------------------------------

    - multijob:
        name: 'Run tests'
        condition: SUCCESSFUL

        projects:

        - name: '{project-version}-pkg-{project-name}-install-{os}-{distro}'
          predefined-parameters: |
            GERRIT_HOST={gerrit-host}
            GERRIT_PORT={gerrit-port}
            GERRIT_USER={gerrit-user}
            GERRIT_PROJECT=$GERRIT_PROJECT
            GERRIT_CHANGE_STATUS=REF_UPDATED
            GERRIT_REFNAME={project-version}
            GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
            GERRIT_PATCHSET_NUMBER=$GERRIT_PATCHSET_NUMBER
            SOURCE_BRANCH={project-version}
            MIRROR_HOST={publish-repo-host}

        - name: '{project-version}-pkg-{project-name}-systest-{os}-{distro}'
          predefined-parameters: |
            GERRIT_HOST={gerrit-host}
            GERRIT_PORT={gerrit-port}
            GERRIT_USER={gerrit-user}
            GERRIT_PROJECT=$GERRIT_PROJECT
            GERRIT_CHANGE_STATUS=REF_UPDATED
            GERRIT_REFNAME={project-version}
            GERRIT_CHANGE_NUMBER=$GERRIT_CHANGE_NUMBER
            GERRIT_PATCHSET_NUMBER=$GERRIT_PATCHSET_NUMBER
            SOURCE_BRANCH={project-version}
            MIRROR_HOST={publish-repo-host}
            GUESS_MIRROR=false
            TEST_GROUP=

    # Step IV:
    #   if package(s) pass tests then publishing to master is required
    # -------------------------------------

    # TODO: add step after all tests will be implemented

    # Step V:
    #   Gather all the artifacts here
    # -------------------------------------

    publishers:
    - archive:
        # this artifact comes from building packages before any test run
        artifacts: 'buildresult-tmp.params'
    - archive:
        # this artifact comes from building packages before any test run
        artifacts: 'tests-tmp.envfile'
    - archive:
        # this artifact comes from publishing packages before any test run
        artifacts: '{pkg_type}.publish-tmp.setenvfile'

- job-template:
    name: '{project-version}.packages.update-{project-name}.{os}.{os_project_name}'
    description: 'Update trunk repo with packages from {os_project_name} project'
    concurrent: false

    # TODO: Enable
    # triggers:
    #   - timed: '{timed}'

    wrappers:
    - timeout:
        timeout: 300

    builders:
    - trigger-builds:
      - project: '{project-version}-pkg-{project-name}-scenario-{os}-{distro}'
        block: true
        predefined-parameters: |
          GERRIT_PROJECT=openstack/{os_project_name}

- project:
    name: 'master.packages.update-trunk.centos openstack projects'
    project-version: master
    project-name: trunk

    # rebuild all in 2 days, spreaded evenly
    # FIXME(aevseev) disable trunk jobs to free resources
    #timed: 'H H H/2 * *'
    timed: ''

    os_project_name:

      # oslo is not gated in upstream, so it's
      # disabled because it could break all the pipelines

      #- 'oslo'
      #- 'oslo.cache'
      #- 'oslo.concurrency'
      #- 'oslo.config'
      #- 'oslo.context'
      #- 'oslo.db'
      #- 'oslo.i18n'
      #- 'oslo-incubator'
      #- 'oslo.log'
      #- 'oslo.messaging'
      #- 'oslo.middleware'
      #- 'oslo.policy'
      #- 'oslo.reports'
      #- 'oslo.rootwrap'
      #- 'oslo.serialization'
      #- 'oslo.service'
      #- 'oslosphinx'
      #- 'oslotest'
      #- 'oslo.utils'
      #- 'oslo.version'
      #- 'oslo.versionedobjects'
      #- 'oslo.vmware'

      # keystoneauth

      - 'keystoneauth'

      # os-*

      - 'os-apply-config'
      - 'os-brick'
      - 'os-client-config'
      - 'os-cloud-config'
      - 'os-collect-config'
      - 'os-net-config'
      - 'os-refresh-config'
      - 'os-testr'
      - 'os-win'

      # python-clients

      - 'python-aodhclient'
      - 'python-barbicanclient'
      - 'python-brick-cinderclient-ext'
      - 'python-ceilometerclient'
      - 'python-cinderclient'
      - 'python-congressclient'
      - 'python-designateclient'
      - 'python-glanceclient'
      - 'python-gnocchiclient'
      - 'python-heatclient'
      - 'python-ironicclient'
      - 'python-keystoneclient'
      - 'python-magnumclient'
      - 'python-manilaclient'
      - 'python-marketplaceclient'
      - 'python-mistralclient'
      - 'python-muranoclient'
      - 'python-neutronclient'
      - 'python-novaclient'
      - 'python-openstackclient'
      - 'python-saharaclient'
      - 'python-senlinclient'
      - 'python-swiftclient'
      - 'python-troveclient'
      - 'python-zaqarclient'

      - 'keystone'

      - 'bareon'

      - fuel-library
      - shotgun

      # todo: add more projects
    # fixme: move to project "trunk" and check that there will be no missed jobs
    jobs:
      - '{project-version}.packages.update-{project-name}.{os}.{os_project_name}':
          os: centos
          distro: centos7
      - '{project-version}.packages.update-{project-name}.{os}.{os_project_name}':
          os: ubuntu
          distro: trusty

