- job-template:
    name: '{project-version}-pkg-{project-name}-install-{os}-{distro}'
    project-type: freestyle
    concurrent: true

    parameters:
      - gerrit

    properties:
      - inject:
          # fixme: REPO_TYPE will be injected later
          # fixme: DIST will be injected later as DEB_DISTRO or RPM_DISTRO
          properties-content: |
            DIST={distro}
            REPO_TYPE={pkg_type}
            IS_DOWNGRADE={is-downgrade}
            ADDITIONAL_EXTRAREPO_DEB=
            ADDITIONAL_EXTRAREPO_RPM=

    wrappers:
      - ssh-agent-credentials:
          users:
            - '{ssh-creds-openstack-ci-jenkins}'
            - '{ssh-creds-install-vm-trusty-root}'
            - '{ssh-creds-install-vm-centos7-root}'
      - pre-scm-buildstep:
        - shell: 'rm -rf ${{WORKSPACE?}}/*'
      - timestamps
      - ansicolor

    triggers:
      - zuul

    scm:
      - fuel-infra:
          username: '{username-openstack-ci-jenkins}'
          credentials-id: '{ssh-creds-openstack-ci-jenkins}'
          repo: '{install-scm-repo}'
          branch: '{install-scm-branch}'
          basedir: ''
      - git:
          url: 'https://review.fuel-infra.org/packaging/runtests'
          basedir: 'runtests'
          skip-tag: true
          browser: gitweb
          browser-url: 'https://review.fuel-infra.org/gitweb?p=packaging/runtests.git'

    builders:

      - extended-bash:
          headers: ''
          script: '{pre-build-script}'

      - shell: |
          #!/bin/bash
          set -ex
          git -C runtests checkout "${{GERRIT_BRANCH?}}" || rm -rf runtests

      - shell:
          !include-raw-escape:
            '../builders/mos.install.cleanup.sh'

      - inject-from-job(same-change):
          # need BUILD_HOST PKG_PATH
          job-name: '{project-version}-pkg-{project-name}-build-{os}-{distro}'
          artifact-name: 'buildresult.params'

      - inject-from-job(same-change):
          # need TESTS_CONTENT
          job-name: '{project-version}-pkg-{project-name}-build-{os}-{distro}'
          artifact-name: 'tests.envfile'

      - inject-from-job(same-change):
          # need {pkg_type}_VERSION {pkg_type}_BINARIES {pkg_type}_REPO_URL {pkg_type}_VERSION
          job-name: '{project-version}-pkg-{project-name}-publish-{os}-{distro}'
          artifact-name: '{pkg_type}.publish.setenvfile'

      - shell: |
          #!/bin/bash

          set -ex

          # Check parameters required by test script(s)
          : "${{DIST?}}"
          : "${{REPO_TYPE?}}"

          # Prepare parameters for test
          export PACKAGEVERSION=${{DEB_VERSION:-${{RPM_VERSION}}}}
          export PACKAGELIST=${{DEB_BINARIES:-${{RPM_BINARIES}}}}
          export REPO_URL=${{DEB_REPO_URL:-${{RPM_REPO_URL}}}}

          # Remove quotes, double and trailing slashes
          REPO_URL=$(echo "${{REPO_URL}}"   | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          EXTRAREPO=$(echo "${{EXTRAREPO}}" | sed 's|"||g; s|/\+|/|g; s|:|:/|g; s|/ | |g')
          PACKAGELIST=$(echo "${{PACKAGELIST}}" | sed 's|,| |g')

          # it's possible to add additional repos for systests
          case ${{REPO_TYPE?}} in
              deb)
                  if [ ! -z "${{ADDITIONAL_EXTRAREPO_DEB}}" ] ; then
                      export EXTRAREPO="${{EXTRAREPO}}|${{ADDITIONAL_EXTRAREPO_DEB}}"
                  fi
                  ;;
              rpm)
                  if [ ! -z "${{ADDITIONAL_EXTRAREPO_RPM}}" ] ; then
                      export EXTRAREPO="${{EXTRAREPO}}|${{ADDITIONAL_EXTRAREPO_RPM}}"
                  fi
                  ;;
          esac

          for script in "version-test-${{REPO_TYPE?}}" "vm-test"
          do
              bash -x "${{WORKSPACE}}/${{script}}"
          done

    publishers:
      - post-tasks:
        - matches:
            - log-text: '/run/shm/'
          script:
            !include-raw-escape:
              '../builders/mos.install.destroy.vm.sh'
      - junit:
          results: 'report.xml'
      - archive:
          artifacts: '**/*.xml, {pkg_type}.install.setenvfile'
          allow-empty: true

    node: '{install-node}'