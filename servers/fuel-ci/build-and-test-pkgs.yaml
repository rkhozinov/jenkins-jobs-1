- job-template:
    # Variables required:
    #
    # version-id
    #     Versioned identificator of the job.
    #     For example: ``8.0``, ``8.0-kilo``, ``master``.
    # ubuntu_dist
    #     'trusty' or 'xenial'
    # dist
    #     OPENSTACK_RELEASE variable (ex, 'Ubuntu').
    # testgroup
    #     Test group used as --group parameter in system_test.sh
    #     (ex, smoke_neutron)
    # mos
    #     MOS version
    # project
    #     Name of the repository with code to test (ex, fuel-library)
    # projectbranch
    #     Branch of the repository above.
    #     Used for Gerrit Trigger configuration.
    # projectpackage
    #     Name of the package to build from project repository
    # venvpath
    #     Path to virtual env with fuel-devops installed (VENV_PATH)
    # properties
    #     List of strings "VAR=value".
    #     Additional variables injected in job environment.

    name: '{version-id}.{project}.pkgs.{dist}.{testgroup}'
    properties: ''
    concurrent: true

    description: |
      Runs deployment test with TEST_GROUP={testgroup} for reviews in
      openstack/{project}
    node: '{version-id}-{project}-pkgs'
    parameters:
      - string:
          name: GERRIT_REFSPEC
          default: 'refs/heads/{projectbranch}'
    properties:
      - throttle:
          max-per-node: 1
          option: project
      - heavy-job:
          weight: 6

    logrotate:
      daysToKeep: 90
      numToKeep: -1
      artifactDaysToKeep: 7
      artifactNumToKeep: -1

    scm:
      - git:
          branches:
            - $GERRIT_BRANCH
          remotes:
            - gerrit:
                refspec: $GERRIT_REFSPEC
                url: https://review.openstack.org/openstack/{project}.git
          basedir: '{project}'
          wipe-workspace: false
          timeout: 20
          choosing-strategy: gerrit
      - git:
          url: 'https://git.openstack.org/openstack/fuel-mirror.git'
          branches:
            - '{projectbranch}'
          basedir: 'fuel-mirror'
          wipe-workspace: false

    builders:
      - inject:
          # pkgs variables
          properties-content: |
            RPM_MIRROR_BASE_NAME={rpm-mirror-base-name}
            DEB_MIRROR_BASE_NAME={deb-mirror-base-name}
            PROJECT={project}
            PROJECT_PACKAGE={projectpackage}
      - inject:
          # test environment variables
          properties-content: |
            FUEL_QA_REPO=https://git.openstack.org/openstack/fuel-qa.git
            FUEL_QA_BRANCH={projectbranch}
            SYSTEST_ROOT=$WORKSPACE/fuel-qa
            ENV_JOB=devops.{version-id}.env
            VENV_PATH={venvpath}
            ENV_PREFIX=env_{version-id}_{testgroup}
      - inject:
          # deployment variables
          properties-content: |
            UBUNTU_DIST={ubuntu_dist}
            OPENSTACK_RELEASE={dist}
            TEST_GROUP={testgroup}
            UPDATE_FUEL=true
            UPDATE_FUEL_PATH=$WORKSPACE/packages/
            UBUNTU_RELEASE=auxiliary
            LOCAL_MIRROR_UBUNTU=/var/www/nailgun/ubuntu/auxiliary/
            LOCAL_MIRROR_CENTOS=/var/www/nailgun/centos/auxiliary/
            EXTRA_RPM_REPOS_PRIORITY=15
            EXTRA_DEB_REPOS_PRIORITY=1100
      - inject:
          # overrides
          properties-content: '{properties}'
      - shell:
          # check and prepare testing environment
          !include-raw-escape: builders/deployment-env.sh
      - inject:
          # load the parameter used in deployment test
          properties-file: 'deployment.properties'
      - shell:
          # build package
          !include-raw-escape: builders/build-pkgs.sh
      - shell:
          # run deployment test
          !include-raw-escape: builders/test-pkgs.sh

    publishers:
      - archive:
          allow-empty: true
          artifacts: 'logs/$BUILD_NUMBER/*,packages/*'
          latest-only: false
      - description-setter:
          regexp: 'Description string: (iso:\s+.*\s+fuel-qa:\s+.*\s+fuel-devops:.*)'
          regexp-for-failed: 'Description string: (iso:\s+.*\s+fuel-qa:\s+.*\s+fuel-devops:.*)'

    triggers:
      - gerrit:
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: '{gerrit_trigger_on_recheck_regexp}'
          server-name: defaultServer
          projects:
            - project-compare-type: PLAIN
              project-pattern: 'openstack/{project}'
              branches:
                - branch-compare-type: PLAIN
                  branch-pattern: '{projectbranch}'
          readable-message: true
          custom-url: '* $JOB_NAME $BUILD_URL'
          # if true - then run in non-voting mode
          skip-vote:
            successful: '{obj:non_voting}'
            failed: '{obj:non_voting}'
            unstable: '{obj:non_voting}'
            notbuilt: '{obj:non_voting}'
      # run by timer - needed for monitoring
      - timed: '{timed}'

    wrappers:
      - timeout:
          fail: true
          timeout: '{timeout}'
          write-description: true
